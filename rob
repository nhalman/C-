/*
Szukanie największej sumy w ciągłym podprzedziale wektora
Definicja. Dla danego (rzeczywistego) wektora x [n], oblicz największą sumę
znalezioną w dowolnym jego ciągłym podwektorze.
*/

#include "stdafx.h"
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;



int _tmain(int argc, _TCHAR* argv[])
{
	int T[10] = { 31, -41, 59, 26, -53, 58, 97, -93, -23, 84 }; //wektor
	int n = 10;
	int maxsofar = 0;
	int maxhere = 0;
	int s = 0;
	int a;
	int b = 0;

	for (int k = 0; k < n; k++){

		if (maxhere + T[k] >= 0){
			maxhere = maxhere + T[k];
		}
		if (maxhere + T[k] < 0){
			maxhere = 0;
		}

		if (maxsofar < maxhere){
			maxsofar = maxhere;
			s = s + 1;
			b = k;
		}
	}

	a = b - s;

	cout << "Maksymalna suma to: " << maxsofar << "\n";
	cout << "a to: " << a << "\n";
	cout << "b to: " << b << "\n";

	system("PAUSE");
	return 0;
}
