/*
Sortowanie szybkie – quicksort
Aby posortować tablicę, dzielimy ją na dwie części ze względu na wybrany element tablicy tak, żeby wszystkie
elementy mniejsze od tego wybranego znalazły się po lewej stronie a większe po prawej.
Następnie sortujemy rekurencyjnie każdą z części. Rekurencja kończy się, gdy przedział ma mniej niż 2 elementy.
*/

#include "stdafx.h"
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

void sort(int *T, int d, int g){

	int el_gr = T[d]; //element graniczny, względem którego sortujemy tablice
	int srodek = d;
	int temp;


	temp = T[d];
	T[d] = T[(d + g) / 2];
	T[(d + g) / 2] = temp;

	if (d < g){
		//rozdzielanie


		for (int k = srodek + 1; k <= g; k++){
			if (T[k] < el_gr){
				srodek = srodek + 1;
				temp = T[srodek];
				T[srodek] = T[k];
				T[k] = temp;
			}
		}

		temp = T[d];
		T[d] = T[srodek];
		T[srodek] = temp;

		sort(T, d, srodek - 1);
		sort(T, srodek + 1, g);
	}
}


int _tmain(int argc, _TCHAR* argv[])
{
	int T[10000]; //tablica do posortowania
	int n = 10000;
	int g = n-1;
	int d = 0;

	for (int j = 0; j < n; j++){
		T[j] = j;
	}


	sort(T, d, g);

	for (int k = 0; k < n; k++){
		cout << T[k] << " ";
	}
	cout << "\n";

	system("PAUSE");
	return 0;
}
